openapi: 3.0.0
info:
  title: 'Laravel RESTful APIs'
  description: 'Example of RESTful APIs'
  contact:
    email: saad.amjad@monstar-lab.com
  license:
    name: 'Apache 2.0'
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
  version: 1.0.0
servers:
  -
    url: 'http://localhost:8000'
    description: 'Demo API Server'
paths:
  /api/v1/register:
    post:
      tags:
        - Register
      summary: 'Register user'
      description: 'Registers user in the system'
      operationId: register
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StoreRegisterRequest'
      responses:
        200:
          description: 'Successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegisterResponse'
        400:
          description: 'Bad Request'
  /api/v1/login:
    post:
      tags:
        - Login
      summary: 'Login user'
      description: 'Logins user in the system'
      operationId: login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StoreLoginRequest'
      responses:
        200:
          description: 'Successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
        400:
          description: 'Bad Request'
  /api/v1/books:
    get:
      tags:
        - Books
      summary: 'Get list of books'
      description: 'Returns list of books'
      operationId: index
      responses:
        200:
          description: 'Successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookCollection'
        401:
          description: Unauthenticated
        403:
          description: Forbidden
      security:
        -
          apiAuth: []
components:
  schemas:
    BookCollection:
      title: 'Book Collection'
      description: 'Book Collection'
      properties:
        data:
          title: Data
          description: 'Data wrapper'
          type: array
          items:
            $ref: '#/components/schemas/BookResource'
      type: object
      xml:
        name: BookCollection
    BookResource:
      title: 'Book Resource'
      description: 'Book resource'
      properties:
        id:
          title: ID
          description: ID
          type: integer
          format: int64
          example: 1
        title:
          title: Title
          description: 'Name of the new book'
          type: string
          example: 'Sample Book'
        created_at:
          title: 'Created at'
          description: 'Created at'
          type: string
          format: datetime
          example: '2020-01-27 17:50:45'
        updated_at:
          title: 'Updated at'
          description: 'Updated at'
          type: string
          format: datetime
          example: '2020-01-27 17:50:45'
        author_id:
          title: 'Author ID'
          description: 'Author''s id of the new book'
          type: integer
          format: int64
          example: 1
      type: object
      xml:
        name: BookResource
    LoginResponse:
      title: 'Login Response'
      description: 'Login Response'
      properties:
        access_token:
          title: accessToken
          description: 'Access Token'
          type: string
          example: 4|IZ95yiIqqCVsfT2rmWnnxbAwhlO2zz2Mz3dstUw8
        token_type:
          title: 'Token Type'
          description: 'Type of Token'
          type: string
          example: Bearer
      type: object
      xml:
        name: LoginResponse
    RegisterResponse:
      title: 'Register Response'
      description: 'Register Response'
      properties:
        access_token:
          title: accessToken
          description: ID
          type: string
          example: 4|IZ95yiIqqCVsfT2rmWnnxbAwhlO2zz2Mz3dstUw8
        token_type:
          title: 'Token Type'
          description: 'Type of Token'
          type: string
          example: Bearer
      type: object
      xml:
        name: RegisterResponse
    StoreLoginRequest:
      title: 'Store Login Request'
      description: 'Store login request body data'
      required:
        - email
        - password
      properties:
        email:
          title: email
          description: 'Email of user'
          type: string
          example: saad.amjad@monstar-lab.com
        password:
          title: password
          description: password
          type: string
          example: password123
      type: object
    StoreRegisterRequest:
      title: 'Store Register Request'
      description: 'Store register request body data'
      required:
        - name
        - email
        - password
      properties:
        name:
          title: name
          description: 'Name of the new user'
          type: string
          example: 'Saad Bin Amjad'
        email:
          title: email
          description: 'Email of user'
          type: string
          example: saad.amjad@monstar-lab.com
        password:
          title: password
          description: password
          type: string
          example: password123
      type: object
  securitySchemes:
    apiAuth:
      type: http
      description: 'A short description for security scheme'
      name: 'Token Based '
      scheme: bearer
      in: header
tags:
  -
    name: Books
    description: 'API Endpoints of Books'
security:
  - []
